" vimrc
" For use with neovim, but intended to mostly be compatible with regular vim

filetype plugin on " filtype definitions here have priority
set encoding=utf-8
set number relativenumber

" Vim directories
set undodir=$XDG_DATA_HOME/vim/undo/
set directory=$XDG_DATA_HOME/vim/swap/
set backupdir=$XDG_DATA_HOME/vim/backup/


" Vim info and runtime paths
set viminfo=%,<800,'10,/50,:100,h,f0,n$XDG_DATA_HOME/vim/viminfo
set runtimepath=$XDG_CONFIG_HOME/vim,$VIMRUNTIME,$XDG_CONFIG_HOME/vim/after


" Tabs and formatting
set tabstop=4
set shiftwidth=4
set expandtab         " Expand tabs as spaces
"autocmd filetype markdown set textwidth=80         " insert newline before 80 characters
"autocmd filetype markdown set textwidth=120        " insert newline before 120 characters
autocmd filetype markdown set textwidth=0           " insert newline 1 character before window end
autocmd filetype markdown set wrapmargin=1


" Colourschemes
syntax on
set t_Co=256
autocmd BufEnter * :syntax sync fromstart
colorscheme custom

set statusline=\ %r\ %m\ %y\ %F\ %=\ %c:%l/%L\ [%p%%]


" Leader key [default: \]
let mapleader = " "

"Copy selected text to system clipboard (requires gvim/nvim/vim-x11 installed):
vnoremap <C-c> "+y
map <C-p> "+P

" Allow tab for choosing menu in insert mode
inoremap <expr><Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr><S-Tab> pumvisible() ? "\<C-p>" : "\<Tab>"
inoremap <expr><Cr>  pumvisible() ? "\<C-y>" : "\<Cr>"

" Clear highlights with <Esc> in normal mode
nnoremap <esc> :noh<Cr><Esc>

" Tab movement
nnoremap <leader>h            gT
nnoremap <leader>l            gt

" Double space for navigation
nnoremap <Space><Space> <Esc>/<++><CR>"_c4l

" Run on write
autocmd BufWritePre * %s/\s\+$//e                        " Remove whitespace at end of lines on write
autocmd BufWritePost ~/.Xresources !xrdb %               " Reload xrdb
autocmd BufWritePost ~/.config/X11/xresources !xrdb %    " Reload xrdb

" Setting file types that vim doesn't recognise
"autocmd BufNewFile,BufReadPost *.tex set filetype=tex
autocmd BufNewFile,BufReadPost *.S set filetype=armasm
autocmd BufNewFile,BufReadPost *.s set filetype=armasm


" ===========================================================================
" Plugins
" ===========================================================================

" vim-plug
" TODO: If statement for new systems, move to separate file?
call plug#begin('$XDG_DATA_HOME/vim/plugged')
Plug 'abudden/taghighlight-automirror'
Plug 'shirk/vim-gas'
Plug 'NewLunarFire/wla-vim'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'jiangmiao/auto-pairs'
Plug 'dense-analysis/ale'
Plug 'neoclide/coc.nvim'
Plug 'ziglang/zig.vim'
"Plug 'vim-pandoc/vim-pandoc'
call plug#end()

let g:gasCppComments=1 " gas allow // comments"

let g:vim_markdown_frontmatter=1
let g:vim_markdown_folding_disabled=1
let g:vim_markdown_math=1
let g:vim_markdown_strikethrough=1
let g:vim_markdown_auto_insert_bullets=0
let g:vim_markdown_new_list_item_indent=0

let g:ale_lint_on_enter = 0
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_completion_enabled = 1



" Macros for certain file types
source $XDG_CONFIG_HOME/vim/file_macros.vim

