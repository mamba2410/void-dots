#!/bin/sh

if [ -z "$XDG_CONFIG_HOME" ] || [ -z $XDG_DATA_HOME ]; then
	echo "Error: XDG_CONFIG_HOME or XDG_DATA_HOME are not set"
	exit 1
fi

target_names=$(cat targets)

target_base="$(pwd)"
destination_base="$HOME"
storage_base="$HOME/.old_dots/$(date +'%Y%m%d-%H%M%S')"

[ -z "$1" ] || target_base="$1"
[ -z "$2" ] || destination_base="$2"
[ -z "$3" ] || storage_base="$3"

#echo "Target $target_base"
#echo "Destination $destination_base"
#echo "Dotfile Storage $storage_base"

read -p "Confirm linking from '$target_base' to '$destination_base'? [y/n]  " user_choice
if [ "$user_choice" != "y" ]; then
	echo "Aborting..."
	exit
fi

read -p "Would you like to (m)ove old files to '$storage_base', (d)elete them or (u)pdate the symlinks (will create new links if they don't exist)?  " user_choice
case $user_choice in
	"m"|"M")
		echo "Moving files"
		for f in $target_names; do
			dst="$destination_base/$f"

			if [ "$(dirname $f)" = ".config" ]; then
				dst="$XDG_CONFIG_HOME/$(basename $f)"
			fi
			[ -d $(dirname "$storage_base/$f") ] || mkdir -pv $(dirname "$storage_base/$f")
			mv -v $dst "$storage_base/$f"
		done
		;;
	"d"|"D")
		echo "Deleting files"
		for f in $target_names; do
			dst="$destination_base/$f"

			if [ "$(dirname $f)" = ".config" ]; then
				dst="$XDG_CONFIG_HOME/$(basename $f)"
			fi
			rm -rfv $dst
		done
		;;
	"u"|"U")
		;;
	*)
		;;
esac


echo "Linking files to destination '$destination_base'"

for f in $target_names; do
	src="$target_base/$f"
	dst="$destination_base/$f"

	if [ "$(dirname $f)" = ".config" ]; then
		dst="$XDG_CONFIG_HOME/$(basename $f)"
	fi

	[ -d $(dirname "$dst") ] || mkdir -pv $(dirname "$dst")
	ln -sv $src $dst
	#ln -sv $dst $src
done

echo "Creating directories for programs"
mkdir -pv "$XDG_DATA_HOME/vim/backup"
mkdir -pv "$XDG_DATA_HOME/vim/swap"
mkdir -pv "$XDG_DATA_HOME/vim/undo"
mkdir -pv "$XDG_DATA_HOME/vim/plugged"
mkdir -pv "$XDG_DATA_HOME/bash"
mkdir -pv "$XDG_DATA_HOME/xscripts.d"

